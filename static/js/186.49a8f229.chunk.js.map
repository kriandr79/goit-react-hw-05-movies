{"version":3,"file":"static/js/186.49a8f229.chunk.js","mappings":"yNAyCA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAS,iBAAaF,EAAb,YAqBf,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAINC,EAAAA,EAAAA,GAAUH,GAJJ,gBAGNI,EAHM,EAGdC,KAAQD,QAEVT,EAAWS,GALK,gDAOhBP,EAAS,EAAD,IAPQ,qGAAH,qDAajBK,GACD,GAAE,CAACF,IAEJM,QAAQC,IAAIb,IAGV,iCACE,wBACGA,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAYC,GAAf,EAAOC,OAAP,EAAeD,SAAf,EAAwBE,WAAxB,EAAoCC,IAApC,OACX,wBAAcH,GAALD,EADE,MAIdb,IAAS,yBAAMA,MAGrB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovies from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const fetchPath = `/movie/${movieId}/reviews`; // параметр запиту\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const {\n          data: { results },\n        } = await getMovies(fetchPath);\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        // можно використати для лоадера\n      }\n    };\n\n    fetchMovies();\n  }, [fetchPath]);\n\n  console.log(reviews);\n\n  return (\n    <>\n      <ul>\n        {reviews.map(({ id, author, content, created_at, url }) => (\n          <li key={id}>{content}</li>\n        ))}\n      </ul>\n      {error && <div>{error}</div>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","fetchPath","useEffect","fetchMovies","getMovies","results","data","console","log","map","id","content","author","created_at","url"],"sourceRoot":""}